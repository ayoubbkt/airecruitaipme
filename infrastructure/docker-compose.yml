services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    networks:
      - recruitpme-network
    environment:
      - REACT_APP_API_URL=http://api-gateway:8080

  api-gateway:
    build:
      context: ../backend/api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - cv-service
      - job-service
      - interview-service
    networks:
      - recruitpme-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - AUTH_SERVICE_URL=http://auth-service:8081
      - CV_SERVICE_URL=http://cv-service:8082
      - JOB_SERVICE_URL=http://job-service:8083
      - INTERVIEW_SERVICE_URL=http://interview-service:8084
      - NOTIFICATION_SERVICE_URL=http://notification-service:8085
      - SPRING_CLOUD_GATEWAY_ROUTES[0].ID=auth-service
      - SPRING_CLOUD_GATEWAY_ROUTES[0].URI=http://auth-service:8081
      - SPRING_CLOUD_GATEWAY_ROUTES[0].PREDICATES[0]=Path=/api/auth/**
      - SPRING_CLOUD_GATEWAY_ROUTES[1].ID=cv-service
      - SPRING_CLOUD_GATEWAY_ROUTES[1].URI=http://cv-service:8082
      - SPRING_CLOUD_GATEWAY_ROUTES[1].PREDICATES[0]=Path=/api/cv/**
      - SPRING_CLOUD_GATEWAY_ROUTES[2].ID=job-service
      - SPRING_CLOUD_GATEWAY_ROUTES[2].URI=http://job-service:8083
      - SPRING_CLOUD_GATEWAY_ROUTES[2].PREDICATES[0]=Path=/api/jobs/**
      - SPRING_CLOUD_GATEWAY_ROUTES[3].ID=interview-service
      - SPRING_CLOUD_GATEWAY_ROUTES[3].URI=http://interview-service:8084
      - SPRING_CLOUD_GATEWAY_ROUTES[3].PREDICATES[0]=Path=/api/interviews/**
      - SPRING_CLOUD_GATEWAY_ROUTES[4].ID=notification-service
      - SPRING_CLOUD_GATEWAY_ROUTES[4].URI=http://notification-service:8085
      - SPRING_CLOUD_GATEWAY_ROUTES[4].PREDICATES[0]=Path=/api/notifications/**

  auth-service:
    build:
      context: ../backend/auth-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - redis
    networks:
      - recruitpme-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/auth_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRATION=86400000

  cv-service:
    build:
      context: ../backend/cv-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - minio
      - elasticsearch
      - ai-service
    networks:
      - recruitpme-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/cv_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - MINIO_URL=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - SERVICES_AI_SERVICE_URL=http://ai-service:8000

  job-service:
    build:
      context: ../backend/job-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - elasticsearch
    networks:
      - recruitpme-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/job_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - SERVICES_AI_SERVICE_URL=http://ai-service:8000

  interview-service:
    build:
      context: ../backend/interview-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - postgres
      - ai-service
    networks:
      - recruitpme-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/interview_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SERVICES_AI_SERVICE_URL=http://ai-service:8000

  notification-service:
    build:
      context: ../backend/notification-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - postgres
      - redis
    networks:
      - recruitpme-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/notification_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_USERNAME=your-email@gmail.com
      - MAIL_PASSWORD=your-email-password

  ai-service:
    build:
      context: ../ai-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - recruitpme-network
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/init-multiple-postgresql-databases.sh
    networks:
      - recruitpme-network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=auth_db,cv_db,job_db,interview_db,notification_db

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - recruitpme-network
    volumes:
      - redis-data:/data

  elasticsearch:
    image: elasticsearch:7.17.10
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - recruitpme-network
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - recruitpme-network
    volumes:
      - minio-data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"

networks:
  recruitpme-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  elasticsearch-data:
  minio-data: